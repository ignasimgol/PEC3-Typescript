(()=>{"use strict";var t={729:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.TodoController=void 0,e.TodoController=class{constructor(t,e){this.onTodoListChanged=t=>{this.view.displayTodos(t)},this.handleAddTodo=t=>{this.service.addTodo(t)},this.handleEditTodo=(t,e)=>{this.service.editTodo(t,e)},this.handleDeleteTodo=t=>{this.service.deleteTodo(t)},this.handleToggleTodo=t=>{this.service.toggleTodo(t)},this.service=t,this.view=e,this.service.bindTodoListChanged(this.onTodoListChanged),this.view.bindAddTodo(this.handleAddTodo),this.view.bindEditTodo(this.handleEditTodo),this.view.bindDeleteTodo(this.handleDeleteTodo),this.view.bindToggleTodo(this.handleToggleTodo),this.onTodoListChanged(this.service.todos)}}},861:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Todo=void 0,e.Todo=class{constructor(t,e=!1){this.id=this.generateId(),this.text=t,this.complete=e}generateId(){return(-99990013e3).toString().replace(/[018]/g,(t=>(parseInt(t)^16*Math.random()>>parseInt(t)/4).toString(16)))}}},789:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.TodoService=void 0;const i=o(861);e.TodoService=class{constructor(){if(this.todos=[],this.todos=[],"undefined"!=typeof window&&"undefined"!=typeof localStorage){const t=localStorage.getItem("todos");t&&(this.todos=JSON.parse(t).map((t=>new i.Todo(t.text,t.complete))))}}bindTodoListChanged(t){this.onTodoListChanged=t}commit(t){this.onTodoListChanged&&this.onTodoListChanged(t),"undefined"!=typeof window&&"undefined"!=typeof localStorage&&localStorage.setItem("todos",JSON.stringify(t))}addTodo(t){const e=new i.Todo(t);this.todos.push(e),this.commit(this.todos)}editTodo(t,e){this.todos=this.todos.map((o=>o.id===t?new i.Todo(e,o.complete):o)),this.commit(this.todos)}deleteTodo(t){this.todos=this.todos.filter((e=>e.id!==t)),this.commit(this.todos)}toggleTodo(t){this.todos=this.todos.map((e=>e.id===t?new i.Todo(e.text,!e.complete):e)),this.commit(this.todos)}}},246:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.TodoView=void 0,e.TodoView=class{constructor(){this.app=this.getElement("#root"),this.form=this.createElement("form"),this.input=this.createElement("input"),this.input.type="text",this.input.placeholder="Add todo",this.input.name="todo",this.submitButton=this.createElement("button"),this.submitButton.textContent="Submit",this.form.append(this.input,this.submitButton),this.title=this.createElement("h1"),this.title.textContent="Todos",this.todoList=this.createElement("ul","todo-list"),this.app.append(this.title,this.form,this.todoList),this._temporaryTodoText="",this._initLocalListeners()}get _todoText(){return this.input.value}_resetInput(){this.input.value=""}createElement(t,e){const o=document.createElement(t);return e&&o.classList.add(e),o}getElement(t){return document.querySelector(t)}displayTodos(t){for(;this.todoList.firstChild;)this.todoList.removeChild(this.todoList.firstChild);if(0===t.length){const t=this.createElement("p");t.textContent="Nothing to do! Add a task?",this.todoList.append(t)}else t.forEach((t=>{const e=this.createElement("li");e.id=t.id;const o=this.createElement("input");o.type="checkbox",o.checked=t.complete;const i=this.createElement("span");if(i.contentEditable="true",i.classList.add("editable"),t.complete){const e=this.createElement("s");e.textContent=t.text,i.append(e)}else i.textContent=t.text;const s=this.createElement("button","delete");s.textContent="Delete",e.append(o,i,s),this.todoList.append(e)}));console.log(t)}_initLocalListeners(){this.todoList.addEventListener("input",(t=>{const e=t.target;e.classList.contains("editable")&&(this._temporaryTodoText=e.innerText)}))}bindAddTodo(t){this.form.addEventListener("submit",(e=>{e.preventDefault(),this._todoText&&(t(this._todoText),this._resetInput())}))}bindDeleteTodo(t){this.todoList.addEventListener("click",(e=>{var o;const i=e.target;if(i.classList.contains("delete")){const e=null===(o=i.parentElement)||void 0===o?void 0:o.id;e&&t(e)}}))}bindEditTodo(t){this.todoList.addEventListener("focusout",(e=>{var o;const i=e.target;if(this._temporaryTodoText){const e=null===(o=i.parentElement)||void 0===o?void 0:o.id;e&&t(e,this._temporaryTodoText),this._temporaryTodoText=""}}))}bindToggleTodo(t){this.todoList.addEventListener("change",(e=>{var o;const i=e.target;if("checkbox"===i.type){const e=null===(o=i.parentElement)||void 0===o?void 0:o.id;e&&t(e)}}))}}}},e={};function o(i){var s=e[i];if(void 0!==s)return s.exports;var d=e[i]={exports:{}};return t[i](d,d.exports,o),d.exports}(()=>{const t=o(789),e=o(246);new(o(729).TodoController)(new t.TodoService,new e.TodoView)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,